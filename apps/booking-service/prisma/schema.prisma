datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Room {
  available    Boolean?
  createdAt    DateTime           @default(now())
  hotel        Hotel?             @relation(fields: [hotelId], references: [id])
  hotelId      String?
  id           String             @id @default(cuid())
  name         String?
  price        Float?
  reservations Reservation[]
  typeField    EnumRoomTypeField?
  updatedAt    DateTime           @updatedAt
}

model Hotel {
  address     String?
  createdAt   DateTime   @default(now())
  description String?
  feedbacks   Feedback[]
  id          String     @id @default(cuid())
  name        String?
  rating      Int?
  rooms       Room[]
  updatedAt   DateTime   @updatedAt
}

model Customer {
  createdAt    DateTime      @default(now())
  email        String?
  feedbacks    Feedback[]
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  phone        String?
  reservations Reservation[]
  updatedAt    DateTime      @updatedAt
}

model Reservation {
  createdAt  DateTime  @default(now())
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  dateFrom   DateTime?
  dateTo     DateTime?
  id         String    @id @default(cuid())
  room       Room?     @relation(fields: [roomId], references: [id])
  roomId     String?
  updatedAt  DateTime  @updatedAt
}

model Feedback {
  comments   String?
  createdAt  DateTime  @default(now())
  customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?
  hotel      Hotel?    @relation(fields: [hotelId], references: [id])
  hotelId    String?
  id         String    @id @default(cuid())
  rating     Int?
  updatedAt  DateTime  @updatedAt
}

enum EnumRoomTypeField {
  Option1
}
